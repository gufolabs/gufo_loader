name: Run Tests
env:
  PIP_CACHE_DIR: .pip
  PYTHONPATH: src
on:
  push:
    paths:
      - ".github/workflows/py-tests.yml"
      - "examples/**"
      - "src/**"
      - "tests/**"
      - "setup.cfg"
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix:
        # Run on all supported versions
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set Up Python {{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Cache dependencies
      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ./.pip
          key: ${{ runner.os }}-tests-{{ matrix.python-version }}-${{ hashFiles('./.requirements/lint.txt') }}-${{ hashFiles('./.requirements/test.txt') }}

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Upgrade Build
        run: pip install --upgrade build

      - name: Install Dependencies
        run: pip install -IU -r ./.requirements/lint.txt -r ./.requirements/test.txt

      - name: Check Formatting
        run: black --check examples/ src/ tests/

      - name: Check Flake8
        run: flake8 examples/ src/ tests/

      - name: Check Mypy
        run: mypy --strict src/

      - name: Run Tests
        run: pytest -v

  publish:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set Up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip

      - name: Upgrade Build
        run: pip install --upgrade build

      - name: Build Package
        run: python -m build --sdist --wheel

      # - name: Publish distribution ðŸ“¦ to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #     repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
