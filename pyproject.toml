[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42",
  "wheel",
]

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING", # Disable type-checking imports
  "@(abc\\.)?abstract", # Ignore abstract methods
]
include = ["src/*"]

[tool.coverage.run]
branch = false
omit = ["*tests*", "*examples*"]

[tool.coverage.html]
directory = "dist/coverage"
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [".git", "build", "dist"]
line-length = 79
# Assume Python 3.9
target-version = "py39"
# Always autofix, but never try to fix `F401` (unused imports).
fix = true

[tool.ruff.lint]
ignore = ["D203", "D212", "D107"]
# Enable
select = [
  "E", # Pycodestyle Error
  "F", # Pyflakes
  "W", # Pycodestyle Warning
  "C90", # mccabe
  "I", # isort
  "D", # Pydocstyle
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "B", # flake8-bugbear
  "A", # flake8-builtins
  "C4", # flake8-comprehensions 
  "EM", # flake8-errmsg
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "PLC", # pylint
  "PLE", # pylint
  "PLR", # pylint
  "PLW", # pylint
  "PIE", # flake8-pie
  "RUF", # ruff specific
]
unfixable = ["F401"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# Ignore `E402` (import violations) in all `__init__.py` files
"__init__.py" = ["E402"]
"examples/*.py" = [
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "ANN101", # Missing type annotation for `self` in method
]
"tests/*.py" = [
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "S101", # Use of assert detected
  "S603", # `subprocess` call: check for execution of untrusted input
  "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
]
[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
explicit_package_bases = true
mypy_path = ["src"]
strict = true
warn_unused_ignores = false

[project]
authors = [{name = "Gufo Labs"}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: BSD License",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]
description = "Generic Python class loader for robust plugin infrastructure"
dynamic = ["version"]
keywords = ["loader", "plugin"]
license = {text = "BSD 3-Clause License"}
name = "gufo_loader"
requires-python = ">=3.9"

[project.optional-dependencies]
docs = [
  "mkdocs-material==9.5.44",
  "mkdocstrings[python]==0.27.0",
  "mkdocs-gen-files==0.5.0",
  "mkdocs-literate-nav==0.6.1",
  "mkdocs-section-index==0.3.9",
]
ipython = [
  "ipython==9.4.0",
]
lint = [
  "mypy==1.13.0",
  "ruff==0.11.2",
  "types-PyYAML==6.0.12.3",
]
test = [
  "pytest==8.3.3",
  "coverage[toml]==7.6.4",
  "PyYAML>=6.0",
]

[project.readme]
content-type = "text/markdown"
file = "README.md"

[project.urls]
"Bug Tracker" = "https://github.com/gufolabs/gufo_loader/issues"
Changelog = "https://github.com/gufolabs/gufo_loader/blob/master/CHANGELOG.md"
Documentation = "https://docs.gufolabs.com/gufo_loader/"
Homepage = "https://github.com/gufolabs/gufo_loader/"
"Source Code" = "https://github.com/gufolabs/gufo_loader/"

[tool.setuptools]
include-package-data = false
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
namespaces = true
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "gufo.loader.__version__"}
